#ifndef _PROJECTILE_COLLECTION_H
#define _PROJECTILE_COLLECTION_H
#include <set>
#include "Projectile.h"
class Projectile;
class ProjectileCollection
{
	std::set<Projectile*> projectiles, to_remove, to_add;
	void free_set_mem(std::set<Projectile*>& _data);
public:

	//////////////////////////////////////////////////////////////////////////
	//Przekazywane tutaj objekty musz¹ byæ zaalokowane przez new!
	//Dodaje nowy pocisk do kolekcji
	//////////////////////////////////////////////////////////////////////////
	void Add(Projectile* projectile);

	//////////////////////////////////////////////////////////////////////////
	//Usuwa pocisk z kolekcji
	//Zapewnia równie¿ zwolnienie zaalokowanej Pamiêci!
	//////////////////////////////////////////////////////////////////////////
	void Remove(Projectile* projectile);


	//////////////////////////////////////////////////////////////////////////
	//Dla ka¿dego dodanego objektu wywo³uje metodê Frame
	//////////////////////////////////////////////////////////////////////////
	void FrameAll();


	//////////////////////////////////////////////////////////////////////////
	//Dla ka¿dego dodanego objektu wywo³uje metodê Display
	//////////////////////////////////////////////////////////////////////////
	void DisplayAll();

	void Commit();
	~ProjectileCollection();
};

#endif